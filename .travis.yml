---
services: docker

env:
  - repo=$DOCKERHUB_USERNAME/docker-centos7-ansible

before_install:
  - export container_id=$(date +%s)
  - export cleanup=false
  - export init="/usr/lib/systemd/systemd"
  - export opts="--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  - playbook="test.yml"

before_script:
  - echo 'roles_path = ../' > ansible.cfg
  
script:
  # Download image
  - docker pull $repo
  
  # Run container
  - docker run -d -v="$PWD":/etc/ansible/roles/role_to_test:rw --name $container_id $opts $repo $init
  
  # Run lints.
  - docker exec --tty $container_id env TERM=xterm ansible-playbook /etc/ansible/roles/role_to_test/tests/$playbook --syntax-check
  - docker exec --tty $container_id env TERM=xterm ansible-lint /etc/ansible/roles/role_to_test/
  
  # Run playbook.  
  - docker exec $container_id env TERM=xterm env ANSIBLE_FORCE_COLOR=1 ansible-playbook /etc/ansible/roles/role_to_test/tests/$playbook
  
  # Run idempotence check
  - idempotence=$(mktemp)
  - docker exec $container_id env TERM=xterm env ANSIBLE_FORCE_COLOR=1 ansible-playbook /etc/ansible/roles/role_to_test/tests/$playbook | tee -a $idempotence
  - |
    tail $idempotence | grep -q 'changed=0.*failed=0' \
    && (printf 'Idempotence test: pass \n') \
    || (printf 'Idempotence test: fail \n' && exit 1)
